# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Contract {
  _id: ID!
  items: [ContractItem!]!
  number: String!
}

type ContractItem {
  currency: Currency!
  product: ID!
  quantity: Int!
  unit_price: Int!
}

input CreateContractInput {
  items: [CreateContractItemInput!]!
  number: String!
}

input CreateContractItemInput {
  currency: String
  product: String!
  qty: Float
  unit_price: Float!
}

input CreateProductInput {
  name: String!
}

enum Currency {
  CNY
}

type Customer {
  _id: ID!
  location: Location
  name: String!
  phones: [String!]!
}

input CustomerInput {
  location: LocationInput
  name: String!
  phones: [String!]!
}

type Location {
  city: String!
  district: String!
  province: String!
  street: String
}

input LocationInput {
  city: String!
  district: String!
  province: String!
  street: String
}

type Mutation {
  createContract(createContractInput: CreateContractInput!): Contract!
  createCustomer(customerInput: CustomerInput!): Customer!
  createProduct(createProductInput: CreateProductInput!): Product!
}

type Product {
  _id: ID!
  name: String!
  unit: ProductUnit!
}

enum ProductUnit {
  K
  KG
  L
  ML
  T
}

type Query {
  contract(id: String!): Contract!
  contracts(limit: Int = 10, number: String, offset: Int = 0): [Contract!]!
  customer(id: String!): Customer!
  customers(keywords: RegExp, limit: Int = 10, offset: Int = 0): [Customer!]!
  product(id: String!): Product!
  products(limit: Int = 10, name: String, offset: Int = 0): [Product!]!
}

"""Regular Expression custom scalar type"""
scalar RegExp
